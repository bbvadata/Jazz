Programming Documentation of the Jazz Server


You can start with the class <a href="hierarchy.html">hierarchy</a>.

\n
\section jazz_blocks JazzBlock 101

![Jazz modules](diagrams/jazz_block.png)

This diagram shows the structure of a JazzBlock.\n

1. See jazz_elements/jazz_datablocks.h JazzBlockHeader\n
2. See jazz_elements/jazz_datablocks.h JazzBlockHeader.tensor[]\n
3. See jazz_elements/jazz_datablocks.h int * - Address returned by JazzBlock.pAttribute_keys()\n
4. See jazz_elements/jazz_datablocks.h JazzStringBuffer - Address returned by JazzBlock.pStringBuffer()\n

\n
\section jazz_keepr JazzBlockKeepr 101

![Jazz modules](diagrams/jazz_block_keeper.png)

By file location:\n
\n
A. jazz_elements/jazz_containers.h\n
B. jazz_elements/jazz_persistence.h\n
C. jazz_functional/jazz_column.h\n
D. jazz_functional/jazz_archive.h\n
E. jazz_functional/jazz_dataframe.h\n
\n

JazzBlocks can be:\n

1. **One-shot** - Owned by the caller of new_jazz_block()\n
2. **Volatile** - Owned by some JazzBlockKeepr descendant that is not a JazzPersistence (or descendant)\n
3. **Persisted** - Owned by a JazzPersistence (or descendant), typically a JazzSource\n

\n
\section jazz_mods Jazz Modules 101

![Jazz modules](diagrams/jazz_modules.png)

This diagram shows how the different Jazz modules fit. Everything except the dotted nodes
is in the repository.\n
\n
A. Is the folder jazz_elements (all the pieces that work on blocks)\n
B. Is the folder jazz_functional (all the pieces that support higher level abstractions)\n
C. Is the folder jazz_main (for the http server only)\n
F. (not in this repo) Is where front-end developers build, see the [REST API reference](http://kaalam.github.io/jazz_reference/rest_reference.html)\n
\n
You will typically use (5) for extending the back-end in C++. (noted as (x))\n
You will typically use (4) for connect to other languages, other than R & Python.\n
You will typically use (3) to run R & Python scripts for both local and remote sources.\n
You will typically use (2) build docker images containing your applications.\n
\n
If you use (1), you are the end user, not a developer. ;-)\n

\n
\section note_sec TRANSITION FROM Jazz 0.1.x

  The working scaffold released as 0.2.1.99 is functionally equivalent (the server) to Jazz 0.1.7.
Jazz will be completely rewritten bottom-up (starting from new block definitions and Jazz classes)
during this rewriting, every time we merge the master branch (adding 0.0.1 to the version) will
be fully functional and tested as a replacement for the 0.1.7 server. When rewriting is done,
all the old files will be removed (the authorship remains as there is a lot of code copying).

At this point, both the R and the Python clients will be fully functional and we change the
version to 0.3.1. The version will be conceptually Jazz, although many basic primitives
will still be missing.


\n
\section repo_sec REPOSITORIES

  The main repository of the stable Jazz project: https://github.com/bbvadata/Jazz

\n
\section license_sec LICENSE

 Jazz (c) 2018 kaalam.ai (The Authors of Jazz), using (under the same license):

   1. Biomodelling - The AATBlockQueue class (c) Jacques Basaldúa, 2009-2012 licensed
      exclusively for the use in the Jazz server software.

      Copyright 2009-2012 Jacques Basaldúa

   2. BBVA - Jazz: A lightweight analytical web server for data-driven applications.

      Copyright 2016-2017 Banco Bilbao Vizcaya Argentaria, S.A.

      This product includes software developed at

      BBVA (https://www.bbva.com/)

      Licensed under the Apache License, Version 2.0 (the "License");
      you may not use this file except in compliance with the License.
      You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

   3. LMDB: Copyright 2011-2017 Howard Chu, Symas Corp. All rights reserved.

      Licensed under http://www.OpenLDAP.org/license.html

   Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

*/
