###################################################
###  - THIS FILE IS AUTOMATICALLY GENERATED -   ###
###                                             ###
###                      Do not edit manually.  ###
###  See config.sh and _config_ for reference.  ###
###################################################

#  Jazz (c) 2018-2023 kaalam.ai (The Authors of Jazz), using (under the same license):

#  BBVA - Jazz: A lightweight analytical web server for data-driven applications.

#  Copyright 2016-2017 Banco Bilbao Vizcaya Argentaria, S.A.

# This product includes software developed at

#  BBVA (https://www.bbva.com/)

#  Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#  http://www.apache.org/licenses/LICENSE-2.0

#  Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Target (0) : Help
# -----------------

help:
	@echo ""
	@echo "make [void],"
	@echo "make help       : Show this help."
	@echo ""
	@echo "make djazz      : Make the DEBUG Jazz executable."
	@echo "make jazz       : Make the RELEASE Jazz executable."
	@echo "make tjazz      : Make the DEBUG&TEST Jazz executable."
	@echo ""
	@echo "make clean      : Clean up all files not stored in the repo."
	@echo "make clean-data : Clean up log, cookies, reports, lmdb data. Keep build trees."
	@echo "make info       : Display the Jazz version, flags and important names and paths."
	@echo "make runtest    : Run all the tests on the DEBUG&TEST executable."
	@echo ""
	@echo "  (Sysadmin utils: Only for sudoers!)"
	@echo ""
	@echo "make install    : Install the RELEASE Jazz executable as a service. (Build it first.)"
	@echo "make uninstall  : Uninstall Jazz as a service (in case previously installed)."

	@echo ""

# LMDB targets:
# -------------

mdb.o:
	gcc -Isrc/lmdb -pthread -O2 -g -W -c src/lmdb/mdb.c

midl.o:
	gcc -Isrc/lmdb -pthread -O2 -g -W -c src/lmdb/midl.c

# Variables:
# ----------

DFLAGS := -DDEBUG -g
RFLAGS := -DNDEBUG
TFLAGS := -DDEBUG -DCATCH_TEST -g

# Auto detect compile_mode and set CPPFLAGS accordingly
# -----------

ifneq ("$(wildcard compile_mode_debug)","")
	CPPFLAGS := $(DFLAGS)
endif

ifneq ("$(wildcard compile_mode_release)","")
	CPPFLAGS := $(RFLAGS)
endif

ifneq ("$(wildcard compile_mode_test)","")
	CPPFLAGS := $(TFLAGS)
endif
